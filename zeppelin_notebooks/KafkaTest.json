{"paragraphs":[{"text":"sc","user":"anonymous","dateUpdated":"2020-01-31T01:48:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res1: org.apache.spark.SparkContext = org.apache.spark.SparkContext@34c78034\n"}]},"apps":[],"jobName":"paragraph_1580431763171_883539206","id":"20200131-004923_1753034178","dateCreated":"2020-01-31T00:49:23+0000","dateStarted":"2020-01-31T01:48:19+0000","dateFinished":"2020-01-31T01:48:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:99899"},{"text":"%pyspark\ndf = spark \\\n  .readStream \\\n  .format(\"kafka\") \\\n  .option(\"kafka.bootstrap.servers\", \"10.158.0.57:9092\") \\\n  .option(\"subscribe\", \"test\") \\\n  .load()","user":"anonymous","dateUpdated":"2020-02-01T15:00:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580431845402_-434661521","id":"20200131-005045_848093629","dateCreated":"2020-01-31T00:50:45+0000","dateStarted":"2020-02-01T15:00:51+0000","dateFinished":"2020-02-01T15:01:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99900"},{"text":"%pyspark\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\n#data = df.selectExpr(\"CAST(key AS STRING)\", \"CAST(value AS STRING)\")\n\n\nschema = StructType([ StructField(\"userId\", IntegerType(), True),\n                          StructField(\"movieId\", StringType(), True),\n                          StructField(\"rating\", FloatType(), True),\n                          StructField(\"timestamp\", FloatType(), True)\n                        ])\n                        \ndata = df.selectExpr(\"CAST(value AS STRING)\")\\\n        .select(from_json(\"value\", schema).alias(\"data\")).select(\"data.*\")\n\n\n# data = data.selectExpr(from_json('value', jsonSchema))\n","user":"anonymous","dateUpdated":"2020-02-01T15:46:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580433902024_-868050284","id":"20200131-012502_1483452983","dateCreated":"2020-01-31T01:25:02+0000","dateStarted":"2020-02-01T15:46:21+0000","dateFinished":"2020-02-01T15:46:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99901"},{"text":"%pyspark\n# data.writeStream.format(\"console\").start().awaitTermination()\nquery = (data\n  .writeStream\n  #.outputMode(\"complete\")\n  #.outputMode(\"append\")\n  .format(\"memory\")\n  .queryName(\"testSchema7\")\n  .start())","user":"anonymous","dateUpdated":"2020-02-01T15:46:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1580435356581_-1975333268","id":"20200131-014916_694833715","dateCreated":"2020-01-31T01:49:16+0000","dateStarted":"2020-02-01T15:46:27+0000","dateFinished":"2020-02-01T15:46:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99902"},{"text":"%pyspark\nspark.table(\"testSchema7\").show()","user":"anonymous","dateUpdated":"2020-02-01T15:46:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+-------+------+------------+\n|userId|movieId|rating|   timestamp|\n+------+-------+------+------------+\n|     1|    296|   5.0|1.14788006E9|\n+------+-------+------+------------+\n\n"}]},"apps":[],"jobName":"paragraph_1580435754552_-1899080278","id":"20200131-015554_1749493848","dateCreated":"2020-01-31T01:55:54+0000","dateStarted":"2020-02-01T15:46:44+0000","dateFinished":"2020-02-01T15:46:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99903"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-01-31T02:12:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1580436728858_1688991059","id":"20200131-021208_1640517312","dateCreated":"2020-01-31T02:12:08+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:99904"}],"name":"KafkaTest","id":"2F22NVT3Z","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}